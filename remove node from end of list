# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        curr=head
        prev = None
        count = 1
        if head is None:
            return head
        while curr.next is not None:
            count +=1
            curr = curr.next
        curr = head
        for i in range(count - n +1):
            if i != count - n:
                prev = curr
                curr = curr.next
            else:
                if curr.next is not None:
                    if prev is not None:
                        prev.next = curr.next
                        curr.next = None
                    else:
                        head = curr.next
                        curr.next = None
                else:
                    if prev is not None:
                        prev.next=None
                    else:
                        head = None
        return head
