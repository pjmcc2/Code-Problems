# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        def check(root,ll=float('-inf'),ul = float('inf')):
            if root:
                if root.val>ll and root.val <ul:
                    return (check(root.left,ll,root.val) and check(root.right,root.val,ul))
            else:
                return False
            return True
        return check(root)
      
      
      ###Used this neat solution from Sodax on leetCode forums to fix my recursion error: I should have defined a helper function! 
