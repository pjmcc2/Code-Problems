# Definition for singly-linked list.
class ListNode:
     def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1 is None or list2 is None:
            return list1 if list1 is not None else list2
        if list1.val <= list2.val:
            start_list = list1
            other_list = list2
        else:
            start_list = list2
            other_list = list1
        new_head = ListNode(next=start_list)
        temp = None
        curr_node = start_list
        while curr_node.next is not None:
            if curr_node.next.val >= other_list.val:
                temp = curr_node.next
                curr_node.next = other_list
                curr_node = curr_node.next
                other_list  = temp
            else:
                curr_node = curr_node.next
        if other_list.val >= curr_node.val:
            while other_list is not None:
                curr_node.next = other_list
                curr_node=curr_node.next
                other_list = other_list.next
        
        return new_head.next
